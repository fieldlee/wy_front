{"version":3,"sources":["webpack:///./src/components/views/OptiOne.vue?3ba7","webpack:///src/components/views/OptiOne.vue","webpack:///./src/components/views/OptiOne.vue?5014","webpack:///./src/components/views/OptiOne.vue"],"names":["_vm","this","_c","_self","VContainer","attrs","VRow","VCol","staticClass","VSimpleTable","_v","_l","mode_data","parent","index","key","_s","VTextField","model","value","callback","$$v","$set","expression","VBtn","on","$event","addRowToParents","removeRowToParents","_e","side","percent","selectSpec","child","addRowToChilds","removeRowToChilds","cutBtnDisabled","sendCutRules","sendCutSheet","childs_for_select","length","staticStyle","child_rolls","hoverPlan","i","worstWidth","width","quantity","select","selectdRow","result","bigRoll","getPercentageUtilization","join","downloadCsv","_b","color","snackbar","top","center","snackbarMsg","VDialog","dialog","VCard","VProgressLinear","dialogSelect","VToolbar","VSpacer","dialogAdd","VIcon","VDivider","VDataTable","headers","selections","selected","selectedSpec","delSpec","addSpecInfo","addSpec","staticRenderFns","name","components","PagesBtn","data","cutRules","selectedSolIndex","cutWidth","number","colors","wasteColor","childs","weight","parents","text","spec_type","$vuetify","theme","dark","methods","unusedWidth","list_length","parentWidth","forEach","n","usedWidth","Math","abs","percentage","round","console","log","item","idx","selectdChild","sub_child_solver","ele","rule_selectd_index","solutions","sub_weights","rolls","soluton","subs","s","push","parseFloat","subs_weight","all_len","parent_length","all_weight","parent_weight","un_used","un_used_weight","child_index","w","draw1d","alertErr","error","msg","getSelections","then","response","code","catch","message","ids_del","id","del_ids","ids","prepareDataToSend1DForRule","newChilds","parseInt","newParents","worst_weight","parent_rolls","out_side","seed","random","prepareDataToSend1DForWeight","disableCutBtn","disabled","parent_width","element","dataToSend","displayResult","sol","rule","sud_sol","status_name","statusName","toLowerCase","sortBigRolls","bigRolls","sort","a","b","unique_arr","Array","from","Set","for_each_unique_arr","j","index_j","num","k","index_k","smallRolls","getColorDict","uniqueSmallRollsSet","roll","add","uniqueSmallRolls","colorDict","clearTheDrawing","mode","unSortedBigRolls","graphWidth","document","getElementById","clientWidth","xScale","domain","range","yScale","svg","margin","right","bottom","left","svgWidth","svgHeight","attr","style","x1","x2","y1","smallRoll","g","append","bandwidth","node","remove","splice","dataForCsv","numSmallRolls","nextRow","csvContent","map","e","encodedUri","encodeURI","link","createElement","setAttribute","d","Date","dateString","getFullYear","getMonth","getUTCDate","getHours","getMinutes","getSeconds","filename","body","appendChild","click","component"],"mappings":"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","file":"js/chunk-2d0b9948.023faa50.js","sourcesContent":["import { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDataTable } from 'vuetify/lib/components/VDataTable';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VProgressLinear } from 'vuetify/lib/components/VProgressLinear';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSimpleTable } from 'vuetify/lib/components/VDataTable';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\nimport { VToolbar } from 'vuetify/lib/components/VToolbar';\nimport { VToolbarTitle } from 'vuetify/lib/components/VToolbar';\n\nvar render = function render(){var _vm=this,_c=_vm._self._c;return _c(VContainer,{attrs:{\"id\":\"opti1d-forms\",\"fluid\":\"\",\"tag\":\"section\"}},[_c(VRow,[_c(VCol,{attrs:{\"cols\":\"1\"}}),_c(VCol,{attrs:{\"cols\":\"5\",\"md\":\"5\"}},[_c('base-material-card',{staticClass:\"px-6 py-3\",attrs:{\"color\":\"pink\",\"icon\":\"mdi-bullseye\",\"title\":\"每个输入项单位保持一致，支持精确3位小数。<br/>”边丝宽度“：卷两边的卡槽损耗的宽度。（根据情况设置，没有的填”0“）\",\"isDesc\":true,\"text\":\"<span color='white'><b>母卷设置</b></span>\"}},[_c(VSimpleTable,[_c('thead',[_c('tr',[_c('th',[_vm._v(\"#\")]),_c('th',[_vm._v(\"长度\")]),_c('th',[_vm._v(\"数量\")]),_c('th',[_vm._v(\"重量\")]),_c('th',{staticClass:\"text-right\",attrs:{\"width\":\"20%\"}},[_vm._v(\"\\n                                增加/减少\\n                            \")])])]),_c('tbody',_vm._l((_vm.mode_data.parents),function(parent,index){return _c('tr',{key:index},[_c('td',[_vm._v(_vm._s(index + 1))]),_c('td',[_c(VTextField,{attrs:{\"color\":\"secondary\",\"max-width\":\"50\",\"type\":\"number\"},model:{value:(parent.width),callback:function ($$v) {_vm.$set(parent, \"width\", $$v)},expression:\"parent.width\"}})],1),_c('td',[_c(VTextField,{attrs:{\"color\":\"secondary\",\"max-width\":\"50\",\"type\":\"number\"},model:{value:(parent.quantity),callback:function ($$v) {_vm.$set(parent, \"quantity\", $$v)},expression:\"parent.quantity\"}})],1),_c('td',[_c(VTextField,{attrs:{\"color\":\"secondary\",\"max-width\":\"50\",\"type\":\"number\"},model:{value:(parent.weight),callback:function ($$v) {_vm.$set(parent, \"weight\", $$v)},expression:\"parent.weight\"}})],1),_c('td',{staticClass:\"text-left\"},[_c(VBtn,{staticClass:\"px-2 ml-1\",attrs:{\"color\":\"info\",\"min-width\":\"0\",\"small\":\"\"},on:{\"click\":function($event){return _vm.addRowToParents()}}},[_vm._v(\"\\n                                    +\\n                                \")]),(index != 0)?_c(VBtn,{staticClass:\"px-2 ml-1\",attrs:{\"color\":\"error\",\"min-width\":\"0\",\"small\":\"\"},on:{\"click\":function($event){return _vm.removeRowToParents(index)}}},[_vm._v(\"\\n                                    -\\n                                \")]):_vm._e()],1)])}),0)]),_c(VRow,[_c(VCol,{attrs:{\"cols\":\"1\"}}),_c(VCol,{attrs:{\"cols\":\"4\"}},[_c(VTextField,{attrs:{\"color\":\"secondary\",\"label\":\"边丝宽度\",\"type\":\"number\",\"prepend-icon\":\"mdi-arrow-expand-horizontal\"},model:{value:(_vm.side),callback:function ($$v) {_vm.side=$$v},expression:\"side\"}})],1),_c(VCol,{attrs:{\"cols\":\"4\"}},[_c(VTextField,{attrs:{\"color\":\"secondary\",\"label\":\"期望最低使用率\",\"type\":\"number\",\"suffix\":\"%\",\"prepend-icon\":\"mdi-percent-box-outline\"},model:{value:(_vm.percent),callback:function ($$v) {_vm.percent=$$v},expression:\"percent\"}})],1),_c(VCol,{attrs:{\"cols\":\"3\"}},[_c(VCardActions,{staticClass:\"pl-0 text-right\"},[_c(VBtn,{attrs:{\"color\":\"success\",\"min-width\":\"100\",\"max-width\":\"30\"},on:{\"click\":function($event){return _vm.selectSpec()}}},[_vm._v(\"\\n                                选择常用规格\\n                            \")])],1)],1)],1)],1)],1),_c(VCol,{attrs:{\"cols\":\"5\",\"md\":\"5\"}},[_c('base-material-card',{staticClass:\"px-6 py-3\",attrs:{\"color\":\"success\",\"icon\":\"mdi-format-line-weight\",\"title\":\"每个输入项单位保持一致，支持精确3位小数。<br/>”按长度切割“：不需要输入重量和数量，按照长度计算多个待选方案。<br/>”按预定重量切割“：根据客户预定重量计算每项数量后计算最佳的方案。\",\"isDesc\":true,\"text\":\"<span color='white'><b>分条设置</b></span>\"}},[_c(VSimpleTable,[_c('thead',[_c('tr',[_c('th',{attrs:{\"width\":\"4%\"}},[_vm._v(\"#\")]),_c('th',[_vm._v(\"长度\")]),_c('th',[_vm._v(\"预定重量\")]),_c('th',[_vm._v(\"数量\")]),_c('th',{staticClass:\"text-right\",attrs:{\"width\":\"20%\"}},[_vm._v(\"\\n                                增加/减少\\n                            \")])])]),_c('tbody',_vm._l((_vm.mode_data.childs),function(child,index){return _c('tr',{key:index},[_c('td',[_vm._v(_vm._s(index + 1))]),_c('td',[_c(VTextField,{attrs:{\"color\":\"secondary\",\"type\":\"number\",\"max-width\":\"10\"},model:{value:(child.width),callback:function ($$v) {_vm.$set(child, \"width\", $$v)},expression:\"child.width\"}})],1),_c('td',[_c(VTextField,{attrs:{\"color\":\"secondary\",\"type\":\"number\",\"max-width\":\"50\"},model:{value:(child.weight),callback:function ($$v) {_vm.$set(child, \"weight\", $$v)},expression:\"child.weight\"}})],1),_c('td',[_c(VTextField,{attrs:{\"color\":\"secondary\",\"type\":\"number\",\"max-width\":\"50\"},model:{value:(child.quantity),callback:function ($$v) {_vm.$set(child, \"quantity\", $$v)},expression:\"child.quantity\"}})],1),_c('td',{staticClass:\"text-left\"},[_c(VBtn,{staticClass:\"px-2 ml-1\",attrs:{\"color\":\"info\",\"min-width\":\"0\",\"small\":\"\"},on:{\"click\":function($event){return _vm.addRowToChilds()}}},[_vm._v(\"\\n                                    +\\n                                \")]),(index != 0)?_c(VBtn,{staticClass:\"px-2 ml-1\",attrs:{\"color\":\"error\",\"min-width\":\"0\",\"small\":\"\"},on:{\"click\":function($event){return _vm.removeRowToChilds(index)}}},[_vm._v(\"\\n                                    -\\n                                \")]):_vm._e()],1)])}),0)]),_c(VRow,{staticClass:\"text-right\"},[_c(VCol,{attrs:{\"cols\":\"5\"}}),_c(VCol,{attrs:{\"cols\":\"3\"}},[_c(VCardActions,{staticClass:\"pl-0 text-right\"},[_c(VBtn,{attrs:{\"color\":\"success\",\"disabled\":_vm.cutBtnDisabled},on:{\"click\":function($event){return _vm.sendCutRules()}}},[_vm._v(\"\\n                                按长度切割\\n                            \")])],1)],1),_c(VCol,{attrs:{\"cols\":\"4\"}},[_c(VCardActions,{staticClass:\"pl-0 text-right\"},[_c(VBtn,{attrs:{\"color\":\"success\",\"disabled\":_vm.cutBtnDisabled},on:{\"click\":function($event){return _vm.sendCutSheet()}}},[_vm._v(\"\\n                                按预定重量切割\\n                            \")])],1)],1)],1)],1)],1),_c(VCol,{attrs:{\"cols\":\"1\"}})],1),(_vm.mode_data.childs_for_select && _vm.mode_data.childs_for_select.length > 0)?_c(VRow,{staticStyle:{\"margin-top\":\"-40px\"}},[_c(VCol,{attrs:{\"cols\":\"1\"}}),_c(VCol,{attrs:{\"cols\":\"10\",\"md\":\"10\"}},[_c('base-material-card',{staticClass:\"px-5 py-3\",attrs:{\"color\":\"pink\",\"icon\":\"mdi-format-line-style\",\"text\":\"<span color='white'><b>待选方案</b></span>\"}},[_c(VRow,_vm._l((_vm.mode_data.childs_for_select),function(child_rolls,index){return _c(VCol,{key:index,attrs:{\"cols\":\"2\"}},[_c(VSimpleTable,{staticClass:\"theme--dark font-weight-bold\",attrs:{\"dense\":\"\"},on:{\"mouseover\":function($event){return _vm.hoverPlan(_vm.i)}}},[_c('thead',[_c('tr',[_c('th',[_vm._v(\"#\")]),_c('th',[_vm._v(\"宽度\")]),_c('th',[_vm._v(\"数量\")])])]),_c('thead',[_c('tr',{staticClass:\"border\"},[_c('td',[_vm._v(\"#\")]),_c('td',[_vm._v(\" 损耗\")]),_c('td',[_vm._v(\"\\n                                        \"+_vm._s(child_rolls.worstWidth)+\"\\n                                    \")])])]),_c('tbody',_vm._l((child_rolls.sub_child_solver),function(child,i){return _c('tr',{key:i},[_c('td',[_vm._v(_vm._s(i + 1))]),_c('td',[_vm._v(\"\\n                                        \"+_vm._s(child.width)+\"\\n                                    \")]),_c('td',[_vm._v(\"\\n                                        \"+_vm._s(child.quantity)+\"\\n                                    \")])])}),0)]),_c('div',{staticClass:\"text-center\",staticStyle:{\"margin-top\":\"-10px\",\"z-index\":\"1\"}},[_c('pages-btn',{attrs:{\"color\":!child_rolls.select ? 'info' : 'success',\"small\":\"\",\"depressed\":\"\",\"min-width\":\"50\"},on:{\"click\":function($event){return _vm.selectdRow(index)}}},[_vm._v(\"\\n                                \"+_vm._s('选我')+\"\\n                            \")])],1)],1)}),1)],1)],1),_c(VCol,{attrs:{\"cols\":\"1\"}})],1):_vm._e(),_c(VRow,{staticStyle:{\"margin-top\":\"-40px\"}},[_c(VCol,{attrs:{\"cols\":\"1\"}}),_c(VCol,{attrs:{\"cols\":\"10\",\"md\":\"10\"}},[_c('base-material-card',{staticClass:\"px-5 py-3\",attrs:{\"color\":\"pink\",\"icon\":\"mdi-format-line-style\",\"title\":\"分割方案\",\"text\":\"<span color='white'><b>分割方案</b></span>\"}},[_c(VSimpleTable,[_c('thead',[_c('tr',[_c('th',{attrs:{\"width\":\"4%\"}},[_vm._v(\"#\")]),_c('th',[_c('b',[_vm._v(\"有效宽度\")])]),_c('th',[_c('b',[_vm._v(\"有效重量\")])]),_c('th',[_c('b',[_vm._v(\"使用率\")])]),_c('th',[_c('b',[_vm._v(\"损耗宽度\")])]),_c('th',[_c('b',[_vm._v(\"损耗重量\")])]),_c('th',{attrs:{\"width\":\"50%\"}},[_c('b',[_vm._v(\"明细(规格*数量/重量)\")])])])]),(_vm.mode_data.result)?_c('tbody',_vm._l((_vm.mode_data.result.solutions),function(bigRoll,index){return _c('tr',{key:index},[_c('td',[_vm._v(_vm._s(index + 1))]),_c('td',[_vm._v(\"\\n                                \"+_vm._s(bigRoll[4])+\"\\n                            \")]),_c('td',[_vm._v(\"\\n                                \"+_vm._s(bigRoll[5])+\"\\n                            \")]),_c('td',[_vm._v(\"\\n                                \"+_vm._s(_vm.getPercentageUtilization(bigRoll[0], bigRoll[1]))+\"%\\n                            \")]),_c('td',[_vm._v(\"\\n                                \"+_vm._s(bigRoll[0])+\"\\n                            \")]),_c('td',[_vm._v(\"\\n                                \"+_vm._s(bigRoll[2])+\"\\n                            \")]),_c('td',[_vm._v(\"\\n                                \"+_vm._s(bigRoll[3].join(','))+\"\\n                            \")])])}),0):_vm._e()]),_c(VRow,{staticClass:\"text-right\"},[_c(VCol,{attrs:{\"cols\":\"5\"}}),_c(VCol,{attrs:{\"cols\":\"3\"}},[_c(VCardActions,{staticClass:\"pl-0 text-right\"},[_c(VBtn,{attrs:{\"color\":\"success\",\"disabled\":_vm.cutBtnDisabled},on:{\"click\":function($event){return _vm.downloadCsv()}}},[_vm._v(\"\\n                                下载\\n                            \")])],1)],1),_c(VCol,{attrs:{\"cols\":\"4\"}})],1),_c(VRow,{staticStyle:{\"margin-top\":\"-20px\"}},[_c(VCol,{attrs:{\"cols\":\"11\"}},[_c('div',{attrs:{\"id\":\"d3_area\"}},[_c('svg',{staticStyle:{\"height\":\"100\"}})])])],1)],1)],1),_c(VCol,{attrs:{\"cols\":\"1\"}})],1),_c('base-material-snackbar',_vm._b({attrs:{\"timeout\":2000,\"type\":_vm.color},model:{value:(_vm.snackbar),callback:function ($$v) {_vm.snackbar=$$v},expression:\"snackbar\"}},'base-material-snackbar',{\n            top: true,\n            center: true\n        },false),[_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(_vm._s(_vm.snackbarMsg))])]),_c(VDialog,{attrs:{\"scrim\":false,\"persistent\":\"\",\"width\":\"auto\"},model:{value:(_vm.dialog),callback:function ($$v) {_vm.dialog=$$v},expression:\"dialog\"}},[_c(VCard,{attrs:{\"color\":\"success\"}},[_c(VCardText,[_c('span',{staticClass:\"white--text font-weight-bold\"},[_c('b',[_vm._v(\"请稍后，计算中...\")])]),_c(VProgressLinear,{staticClass:\"mb-0\",attrs:{\"indeterminate\":\"\",\"color\":\"white\"}})],1)],1)],1),_c(VDialog,{attrs:{\"scrollable\":\"\",\"width\":\"400\"},model:{value:(_vm.dialogSelect),callback:function ($$v) {_vm.dialogSelect=$$v},expression:\"dialogSelect\"}},[_c(VCard,[_c(VToolbar,{attrs:{\"color\":\"info\"}},[_c(VToolbarTitle,[_vm._v(\"选择常用规格\")]),_c(VSpacer),_c(VBtn,{staticClass:\"px-2 ml-1\",attrs:{\"small\":\"\",\"color\":\"info\",\"variant\":\"text\"},on:{\"click\":function($event){_vm.dialogAdd = true}}},[_c(VIcon,{attrs:{\"color\":\"white\"}},[_vm._v(\"mdi-plus\")])],1)],1),_c(VDivider),_c(VDataTable,{attrs:{\"headers\":_vm.headers,\"items\":_vm.selections,\"hide-default-footer\":\"\",\"show-select\":\"\"},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}}),_c(VDivider),_c(VCardActions,[_c(VBtn,{attrs:{\"color\":\"success\",\"variant\":\"text\"},on:{\"click\":function($event){return _vm.selectedSpec()}}},[_vm._v(\"\\n                    确定\\n                \")]),_c(VBtn,{attrs:{\"color\":\"blue-darken-1\",\"variant\":\"text\"},on:{\"click\":function($event){_vm.dialogSelect = false}}},[_vm._v(\"\\n                    关闭\\n                \")]),_c(VSpacer),_c(VBtn,{attrs:{\"color\":\"error\",\"align\":\"right\",\"variant\":\"text\"},on:{\"click\":function($event){return _vm.delSpec()}}},[_vm._v(\"\\n                    删除\\n                \")])],1)],1)],1),_c(VDialog,{attrs:{\"scrollable\":\"\",\"width\":\"300\"},model:{value:(_vm.dialogAdd),callback:function ($$v) {_vm.dialogAdd=$$v},expression:\"dialogAdd\"}},[_c(VCard,[_c(VToolbar,{attrs:{\"color\":\"info\"}},[_c(VToolbarTitle,[_vm._v(\"添加常用规格\")]),_c(VSpacer)],1),_c(VDivider),_c(VRow,[_c(VCol,{attrs:{\"cols\":\"1\"}}),_c(VCol,{attrs:{\"cols\":\"10\"}},[_c(VTextField,{attrs:{\"width\":\"80%\",\"label\":\"长度\",\"color\":\"secondary\",\"type\":\"number\"},model:{value:(_vm.addSpecInfo.length),callback:function ($$v) {_vm.$set(_vm.addSpecInfo, \"length\", $$v)},expression:\"addSpecInfo.length\"}}),_c(VTextField,{attrs:{\"width\":\"80%\",\"label\":\"重量\",\"color\":\"secondary\",\"type\":\"number\"},model:{value:(_vm.addSpecInfo.weight),callback:function ($$v) {_vm.$set(_vm.addSpecInfo, \"weight\", $$v)},expression:\"addSpecInfo.weight\"}})],1),_c(VCol,{attrs:{\"cols\":\"1\"}})],1),_c(VDivider),_c(VCardActions,[_c(VBtn,{attrs:{\"color\":\"success\",\"variant\":\"text\"},on:{\"click\":function($event){return _vm.addSpec()}}},[_vm._v(\"\\n                    添加\\n                \")]),_c(VBtn,{attrs:{\"color\":\"blue-darken-1\",\"variant\":\"text\"},on:{\"click\":function($event){_vm.dialogAdd = false}}},[_vm._v(\"\\n                    关闭\\n                \")])],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <v-container id=\"opti1d-forms\" fluid tag=\"section\">\n        <v-row>\n            <v-col cols=\"1\"></v-col>\n            <v-col cols=\"5\" md=\"5\">\n                <base-material-card color=\"pink\" icon=\"mdi-bullseye\"\n                    title=\"每个输入项单位保持一致，支持精确3位小数。<br/>”边丝宽度“：卷两边的卡槽损耗的宽度。（根据情况设置，没有的填”0“）\" :isDesc=true\n                    text=\"<span color='white'><b>母卷设置</b></span>\" class=\"px-6 py-3\">\n                    <v-simple-table>\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>长度</th>\n                                <th>数量</th>\n                                <th>重量</th>\n                                <th class=\"text-right\" width=\"20%\">\n                                    增加/减少\n                                </th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            <tr v-for=\"(parent, index) in mode_data.parents\" v-bind:key=\"index\">\n                                <td>{{ index + 1 }}</td>\n                                <td>\n                                    <v-text-field v-model=\"parent.width\" color=\"secondary\" max-width=\"50\" type=\"number\" />\n                                </td>\n                                <td>\n                                    <v-text-field v-model=\"parent.quantity\" color=\"secondary\" max-width=\"50\"\n                                        type=\"number\" />\n                                </td>\n                                <td>\n                                    <v-text-field v-model=\"parent.weight\" color=\"secondary\" max-width=\"50\" type=\"number\" />\n                                </td>\n                                <td class=\"text-left\">\n                                    <v-btn class=\"px-2 ml-1\" color=\"info\" min-width=\"0\" small @click=\"addRowToParents()\">\n                                        +\n                                    </v-btn>\n                                    <v-btn class=\"px-2 ml-1\" color=\"error\" v-if=\"index != 0\" min-width=\"0\" small\n                                        @click=\"removeRowToParents(index)\">\n                                        -\n                                    </v-btn>\n                                </td>\n                            </tr>\n                        </tbody>\n\n                    </v-simple-table>\n                    <v-row>\n                        <v-col cols=\"1\" />\n                        <v-col cols=\"4\">\n                            <v-text-field color=\"secondary\" v-model=\"side\" label=\"边丝宽度\" type=\"number\"\n                                prepend-icon=\"mdi-arrow-expand-horizontal\">\n                            </v-text-field>\n                        </v-col>\n                        <v-col cols=\"4\">\n                            <v-text-field color=\"secondary\" v-model=\"percent\" label=\"期望最低使用率\" type=\"number\" suffix=\"%\"\n                                prepend-icon=\"mdi-percent-box-outline\">\n                            </v-text-field>\n                        </v-col>\n                        <v-col cols=\"3\">\n                            <v-card-actions class=\"pl-0 text-right\">\n                                <v-btn color=\"success\" min-width=\"100\" max-width=\"30\" @click=\"selectSpec()\">\n                                    选择常用规格\n                                </v-btn>\n                            </v-card-actions>\n                        </v-col>\n                    </v-row>\n                </base-material-card>\n            </v-col>\n            <v-col cols=\"5\" md=\"5\">\n                <base-material-card color=\"success\" icon=\"mdi-format-line-weight\"\n                    title=\"每个输入项单位保持一致，支持精确3位小数。<br/>”按长度切割“：不需要输入重量和数量，按照长度计算多个待选方案。<br/>”按预定重量切割“：根据客户预定重量计算每项数量后计算最佳的方案。\"\n                    :isDesc=true text=\"<span color='white'><b>分条设置</b></span>\" class=\"px-6 py-3\">\n                    <v-simple-table>\n                        <thead>\n                            <tr>\n                                <th width=\"4%\">#</th>\n                                <th>长度</th>\n                                <th>预定重量</th>\n                                <th>数量</th>\n                                <th class=\"text-right\" width=\"20%\">\n                                    增加/减少\n                                </th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            <tr v-for=\"(child, index) in mode_data.childs\" v-bind:key=\"index\">\n                                <td>{{ index + 1 }}</td>\n                                <td>\n                                    <v-text-field v-model=\"child.width\" color=\"secondary\" type=\"number\" max-width=\"10\" />\n                                </td>\n                                <td>\n                                    <v-text-field v-model=\"child.weight\" color=\"secondary\" type=\"number\" max-width=\"50\" />\n                                </td>\n                                <td>\n                                    <v-text-field v-model=\"child.quantity\" color=\"secondary\" type=\"number\" max-width=\"50\" />\n                                </td>\n                                <td class=\"text-left\">\n                                    <v-btn class=\"px-2 ml-1\" color=\"info\" min-width=\"0\" small @click=\"addRowToChilds()\">\n                                        +\n                                    </v-btn>\n                                    <v-btn class=\"px-2 ml-1\" color=\"error\" v-if=\"index != 0\" min-width=\"0\" small\n                                        @click=\"removeRowToChilds(index)\">\n                                        -\n                                    </v-btn>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </v-simple-table>\n                    <v-row class=\"text-right\">\n                        <v-col cols=\"5\"></v-col>\n                        <v-col cols=\"3\">\n                            <v-card-actions class=\"pl-0 text-right\">\n                                <v-btn color=\"success\" :disabled=\"cutBtnDisabled\" @click=\"sendCutRules()\">\n                                    按长度切割\n                                </v-btn>\n                            </v-card-actions>\n                        </v-col>\n                        <v-col cols=\"4\">\n                            <v-card-actions class=\"pl-0 text-right\">\n                                <v-btn color=\"success\" :disabled=\"cutBtnDisabled\" @click=\"sendCutSheet()\">\n                                    按预定重量切割\n                                </v-btn>\n                            </v-card-actions>\n                        </v-col>\n                    </v-row>\n                </base-material-card>\n            </v-col>\n            <v-col cols=\"1\"></v-col>\n        </v-row>\n        <v-row style=\"margin-top:-40px\" v-if=\"mode_data.childs_for_select && mode_data.childs_for_select.length > 0\">\n            <v-col cols=\"1\"></v-col>\n            <v-col cols=\"10\" md=\"10\">\n                <base-material-card color=\"pink\" icon=\"mdi-format-line-style\" text=\"<span color='white'><b>待选方案</b></span>\"\n                    class=\"px-5 py-3\">\n                    <v-row>\n                        <v-col cols=\"2\" v-for=\"(child_rolls, index) in mode_data.childs_for_select\" v-bind:key=\"index\">\n                            <v-simple-table class=\"theme--dark font-weight-bold\" dense @mouseover=\"hoverPlan(i)\">\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>宽度</th>\n                                        <th>数量</th>\n                                    </tr>\n                                </thead>\n                                <thead>\n                                    <tr class=\"border\">\n                                        <td>#</td>\n                                        <td> 损耗</td>\n                                        <td>\n                                            {{\n                                                child_rolls.worstWidth\n                                            }}\n                                        </td>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr v-for=\"(child, i) in child_rolls.sub_child_solver\" v-bind:key=\"i\">\n                                        <td>{{ i + 1 }}</td>\n                                        <td>\n                                            {{ child.width }}\n                                        </td>\n                                        <td>\n                                            {{ child.quantity }}\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </v-simple-table>\n                            <div class=\"text-center\" style=\"margin-top:-10px; z-index: 1;\">\n                                <pages-btn :color=\"!child_rolls.select ? 'info' : 'success'\" small depressed\n                                    @click=\"selectdRow(index)\" min-width=\"50\">\n                                    {{ '选我' }}\n                                </pages-btn>\n                            </div>\n                        </v-col>\n                    </v-row>\n                </base-material-card>\n            </v-col>\n            <v-col cols=\"1\"></v-col>\n        </v-row>\n        <v-row style=\"margin-top:-40px\">\n            <v-col cols=\"1\"></v-col>\n            <v-col cols=\"10\" md=\"10\">\n                <base-material-card color=\"pink\" icon=\"mdi-format-line-style\" title=\"分割方案\"\n                    text=\"<span color='white'><b>分割方案</b></span>\" class=\"px-5 py-3\">\n\n                    <v-simple-table>\n                        <thead>\n                            <tr>\n                                <th width=\"4%\">#</th>\n                                <th><b>有效宽度</b></th>\n                                <th><b>有效重量</b></th>\n                                <th><b>使用率</b></th>\n                                <th><b>损耗宽度</b></th>\n                                <th><b>损耗重量</b></th>\n                                <th width=\"50%\"><b>明细(规格*数量/重量)</b></th>\n                            </tr>\n                        </thead>\n\n                        <tbody v-if=\"mode_data.result\">\n                            <tr v-for=\"(bigRoll, index) in mode_data.result.solutions\" v-bind:key=\"index\">\n                                <td>{{ index + 1 }}</td>\n                                <td>\n                                    {{ bigRoll[4] }}\n                                </td>\n                                <td>\n                                    {{ bigRoll[5] }}\n                                </td>\n                                <td>\n                                    {{ getPercentageUtilization(bigRoll[0], bigRoll[1]) }}%\n                                </td>\n                                <td>\n                                    {{ bigRoll[0] }}\n                                </td>\n                                <td>\n                                    {{ bigRoll[2] }}\n                                </td>\n                                <td>\n                                    {{ bigRoll[3].join(',') }}\n                                </td>\n                            </tr>\n                        </tbody>\n                    </v-simple-table>\n                    <v-row class=\"text-right\">\n                        <v-col cols=\"5\"></v-col>\n                        <v-col cols=\"3\">\n                            <v-card-actions class=\"pl-0 text-right\">\n                                <v-btn color=\"success\" :disabled=\"cutBtnDisabled\" @click=\"downloadCsv()\">\n                                    下载\n                                </v-btn>\n                            </v-card-actions>\n                        </v-col>\n                        <v-col cols=\"4\">\n                        </v-col>\n                    </v-row>\n                    <v-row style=\"margin-top:-20px\">\n                        <v-col cols=\"11\">\n                            <div id=\"d3_area\">\n                                <svg style=\"height: 100\"></svg>\n                            </div>\n                        </v-col>\n                    </v-row>\n                </base-material-card>\n            </v-col>\n            <v-col cols=\"1\"></v-col>\n\n        </v-row>\n        <!---对话框-->\n        <base-material-snackbar v-model=\"snackbar\" :timeout=\"2000\" :type=\"color\" v-bind=\"{\n                top: true,\n                center: true\n            }\">\n            <span class=\"font-weight-bold\">{{ snackbarMsg }}</span>\n        </base-material-snackbar>\n        <!---loading-->\n        <v-dialog v-model=\"dialog\" :scrim=\"false\" persistent width=\"auto\">\n            <v-card color=\"success\">\n                <v-card-text>\n                    <span class=\"white--text font-weight-bold\"><b>请稍后，计算中...</b></span>\n                    <v-progress-linear indeterminate color=\"white\" class=\"mb-0\"></v-progress-linear>\n                </v-card-text>\n            </v-card>\n        </v-dialog>\n\n        <!---选择规格-->\n        <v-dialog v-model=\"dialogSelect\" scrollable width=\"400\">\n            <v-card>\n                <v-toolbar color=\"info\">\n                    <v-toolbar-title>选择常用规格</v-toolbar-title>\n                    <v-spacer></v-spacer>\n\n                    <v-btn small class=\"px-2 ml-1\" color=\"info\" variant=\"text\" @click=\"dialogAdd = true\">\n                        <v-icon color=\"white\">mdi-plus</v-icon>\n                    </v-btn>\n                </v-toolbar>\n                <v-divider></v-divider>\n                <v-data-table :headers=\"headers\" :items=\"selections\" hide-default-footer show-select v-model=\"selected\">\n                </v-data-table>\n                <v-divider></v-divider>\n                <v-card-actions>\n                    <v-btn color=\"success\" variant=\"text\" @click=\"selectedSpec()\">\n                        确定\n                    </v-btn>\n                    <v-btn color=\"blue-darken-1\" variant=\"text\" @click=\"dialogSelect = false\">\n                        关闭\n                    </v-btn>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"error\" align=\"right\" variant=\"text\" @click=\"delSpec()\">\n                        删除\n                    </v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n        <!---添加规格-->\n        <v-dialog v-model=\"dialogAdd\" scrollable width=\"300\">\n            <v-card>\n                <v-toolbar color=\"info\">\n                    <v-toolbar-title>添加常用规格</v-toolbar-title>\n                    <v-spacer></v-spacer>\n                </v-toolbar>\n                <v-divider></v-divider>\n                <v-row>\n                    <v-col cols=\"1\"></v-col>\n                    <v-col cols=\"10\">\n                        <v-text-field width=\"80%\" v-model=\"addSpecInfo.length\" label=\"长度\" color=\"secondary\" type=\"number\" />\n                        <v-text-field width=\"80%\" v-model=\"addSpecInfo.weight\" label=\"重量\" color=\"secondary\" type=\"number\" />\n                    </v-col>\n                    <v-col cols=\"1\"></v-col>\n                </v-row>\n                <v-divider></v-divider>\n                <v-card-actions>\n                    <v-btn color=\"success\" variant=\"text\" @click=\"addSpec()\">\n                        添加\n                    </v-btn>\n                    <v-btn color=\"blue-darken-1\" variant=\"text\" @click=\"dialogAdd = false\">\n                        关闭\n                    </v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n    </v-container>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport { reqSaveSpec, reqDelSpec, getSpecOne, reqStockByWeight, reqStockByLen } from '../../utils/api';\nexport default {\n    name: 'OptiOnePage',\n    components: {\n        PagesBtn: () => import('../elements/Btn.vue')\n    },\n    data: () => ({\n        cutRules: false,\n        dialogAdd: false,\n        dialogSelect: false,\n        dialog: false,\n        selectedSolIndex: false,\n        cutBtnDisabled: false,\n        side: 0,\n        cutWidth: 0,\n        percent: 99.0,\n        number: 0,\n        snackbar: false,\n        color: \"info\",\n        snackbarMsg: \"\",\n        colors: [\n            \"#f1c40f\", // Sun Flower\n            \"#1abc9c\", // Torquise\n            \"#f39c12\", // Orange\n            \"#2ecc71\", // Emerald\n            \"#27ae60\", // Nephritis\n            \"#e67e22\", // Carrot\n            \"#d35400\", // Pumpkin\n            \"#16a085\", // Green Sea\n            \"#3498db\", // Peter River\n            \"#2980b9\", // Belize Hole\n            \"#e74c3c\", // Alizarin\n            \"#c0392b\", // Pomegranate\n            \"#9b59b6\", // Amethyst\n            \"#8e44ad\", // Wisteria\n            \"#ecf0f1\", // Clouds\n            '#bdc3c7', // Silver\n            '#95a5a6', // Concrete <- Clouds & Silver are close\n            '#34495e', // West Asphalt <- don't use because it is very close to Midnight blue\n            '#2c3e50', // Midnight Blue <- use for wasted part\n        ],\n        wasteColor: \"#7f8c8d\",\n        mode_data: {\n            childs: [\n                { width: 0, quantity: 0, weight: 0 },\n            ],\n            parents: [{ width: 0, quantity: 0, weight: 0 }],\n            result: null,\n            childs_for_select: null,\n        },\n\n        headers: [{\n            text: '长度',\n            value: 'length'\n        },\n        {\n            text: '重量',\n            value: 'weight'\n        }],\n        selections: [\n        ],\n        selected: [],\n        addSpecInfo: {\n            spec_type: \"ParentOne\",\n            length: 0,\n            width: 0,\n            weight: 0\n        },\n    }),\n    created() {\n        this.$vuetify.theme.dark = false\n    },\n    beforeDestroy() {\n        this.$vuetify.theme.dark = true\n    },\n    methods: {\n        getPercentageUtilization: function (unusedWidth, list_length) {\n            let parentWidth = unusedWidth;\n            list_length.forEach((n) => {\n                parentWidth += n;\n            });\n            let usedWidth = Math.abs(parentWidth - unusedWidth);\n            let percentage = (usedWidth * 100) / parentWidth;\n\n            percentage *= 100; // preserve 2 digits after decimal\n            percentage = Math.round(percentage); // remove the decimal part\n            percentage /= 100; // back to original percentage\n\n            return percentage;\n        },\n        hoverPlan(index) {\n            console.log(index);\n            let i = 0;\n            this.childs_for_select.forEach((item) => {\n                if (index === i) {\n                    item.select = true;\n                } else {\n                    item.select = false;\n                }\n                i++;\n            });\n        },\n        selectdRow: function (idx) {\n            this.selectedSolIndex = true;\n            let selectdChild = this.mode_data.childs_for_select[idx];\n            console.log(selectdChild);\n            for (let index = 0; index < selectdChild.sub_child_solver.length; index++) {\n                const ele = selectdChild.sub_child_solver[index];\n                this.mode_data.childs[index].quantity = ele.quantity;\n            }\n            this.rule_selectd_index = idx;\n            this.mode_data.result = { \"data\": { \"solutions\": null, \"sub_weights\": null } };\n            this.mode_data.result.data.solutions = this.mode_data.childs_for_select[idx].solutions.solutions;\n            this.mode_data.result.data.sub_weights = this.mode_data.childs_for_select[idx].solutions.sub_weights;\n            let rolls = [];\n            this.mode_data.result.data.solutions.forEach((soluton) => {\n                let subs = [];\n                soluton.subs.forEach((s) => {\n                    subs.push(Math.round(parseFloat(s)) / 1000);\n                });\n                let subs_weight = [];\n                soluton.sub_weights.forEach((s) => {\n                    subs_weight.push(Math.round(parseFloat(s)) / 1000);\n                });\n                let all_len = Math.round(parseFloat(soluton.parent_length)) / 1000;\n                let all_weight = Math.round(parseFloat(soluton.parent_weight)) / 1000;\n                rolls.push([parseFloat(soluton.un_used / 1000), subs, parseFloat(soluton.un_used_weight / 1000), subs_weight, all_len, all_weight]);\n            });\n\n            this.mode_data.result.solutions = rolls;\n            let child_index = 0;\n            this.mode_data.result.data.sub_weights.forEach(() => {\n                this.mode_data.childs[child_index].weight = 0;\n                child_index += 1;\n            });\n            child_index = 0;\n            this.mode_data.result.data.sub_weights.forEach((w) => {\n                if (parseFloat(this.mode_data.childs[child_index].weight)) {\n                    this.mode_data.childs[child_index].weight = parseFloat(this.mode_data.childs[child_index].weight) + w / 1000;\n                } else {\n                    this.mode_data.childs[child_index].weight = w / 1000;\n                }\n                child_index += 1;\n            });\n            this.draw1d();\n        },\n        alertErr: function (error, msg) {\n            this.snackbar = true;\n            if (error === true) {\n                this.color = 'error';\n            } else {\n                this.color = 'info';\n            }\n            this.snackbarMsg = msg;\n        },\n        selectSpec: function () {\n            this.dialogSelect = true;\n            this.getSelections();\n        },\n        selectedSpec: function () {\n            this.dialogSelect = false;\n\n            this.selected.forEach((item) => {\n                if (this.mode_data.parents[0].width == 0) {\n                    this.mode_data.parents = [];\n                }\n                this.mode_data.parents.push({ width: item.length, quantity: 1, weight: item.weight });\n            })\n        },\n        addSpec: function () {\n            this.addSpecInfo.length = parseFloat(this.addSpecInfo.length);\n            this.addSpecInfo.weight = parseFloat(this.addSpecInfo.weight);\n            reqSaveSpec(this.addSpecInfo)\n                .then((response) => {\n                    this.dialogAdd = false;\n                    if (response.code == 0) {\n                        this.getSelections();\n                        this.selected = [];\n                        return\n                    }\n                    this.alertErr(true, response.msg);\n                    return\n                })\n                .catch((error) => {\n                    this.dialogAdd = false;\n                    this.alertErr(true, error.message);\n                    return false;\n                });\n        },\n        delSpec: function () {\n            let ids_del = [];\n            this.selected.forEach((item) => {\n                ids_del.push(item.id);\n            })\n            let del_ids = {\n                ids: ids_del\n            };\n            console.log(del_ids);\n            reqDelSpec(del_ids).then((response) => {\n                console.log(response);\n                if (response.code == 0) {\n                    this.getSelections();\n                    this.selected = [];\n                    return\n                }\n                this.alertErr(true, response.msg);\n                return\n            })\n                .catch((error) => {\n                    this.alertErr(true, error.message);\n                    return false;\n                });\n        },\n        prepareDataToSend1DForRule: function () {\n            let newChilds = [];\n            this.mode_data.childs.forEach((child) => {\n                newChilds.push({ \"width\": parseInt(parseFloat(child.width) * 1000) });\n            });\n\n            let newParents = [];\n            this.mode_data.parents.forEach((parent) => {\n                let worst_weight = Math.round((parseFloat(this.side) / parseFloat(parent.width)) * (parseFloat(parent.weight) * 1000));\n                newParents.push({ \"quantity\": parseInt(parent.quantity), \"width\": parseInt(parseFloat(parent.width) * 1000), \"weight\": parseInt(parseFloat(parent.weight) * 1000 - worst_weight) });\n            });\n\n            return {\n                child_rolls: newChilds,\n                parent_rolls: newParents,\n                side: parseInt(parseFloat(this.cutWidth) * 1000),\n                out_side: parseInt(parseFloat(this.side) * 1000),\n                seed: Math.round(Math.random() * 10),\n                percent: this.percent,\n            };\n        },\n        prepareDataToSend1DForWeight: function () {\n            let newChilds = [];\n            this.mode_data.childs.forEach((child) => {\n                newChilds.push({ \"quantity\": parseInt(child.quantity), \"width\": parseInt(parseFloat(child.width) * 1000) });\n            });\n\n            let newParents = [];\n            this.mode_data.parents.forEach((parent) => {\n                let worst_weight = Math.round((parseFloat(this.side) / parseFloat(parent.width)) * (parseFloat(parent.weight) * 1000));\n                newParents.push({ \"quantity\": parseInt(parent.quantity), \"width\": parseFloat(parent.width) * 1000, \"weight\": parseInt(parseFloat(parent.weight) * 1000 - worst_weight) });\n            });\n\n            return {\n                child_rolls: newChilds,\n                parent_rolls: newParents,\n                side: parseInt(parseFloat(this.cutWidth) * 1000),\n                out_side: parseInt(parseFloat(this.side) * 1000),\n                seed: Math.round(Math.random() * 10)\n            };\n        },\n        disableCutBtn: function (disabled) {\n            this.cutBtnDisabled = disabled;\n        },\n        sendCutSheet: function () {\n            this.mode_data.childs_for_select = [];\n            this.cutRules = false;\n            let parent_width = 0.0;\n            let all_weight = 0.0;\n            for (let index = 0; index < this.mode_data.parents.length; index++) {\n                const element = this.mode_data.parents[index];\n                if (element.weight == null || element.weight == 0) {\n                    this.alertErr(true, \"请输入母卷的重量！\");\n                    return false;\n                }\n                if (element.width == null || element.width == 0) {\n                    this.alertErr(true, \"请输入母卷的长度！\");\n                    return false;\n                }\n                if (element.quantity == null || element.quantity == 0) {\n                    this.alertErr(true, \"请输入母卷的数量！\");\n                    return false;\n                }\n            }\n            for (let index = 0; index < this.mode_data.childs.length; index++) {\n                const element = this.mode_data.childs[index];\n                if (element.weight == null || element.weight == 0.0) {\n                    this.alertErr(true, \"请输入子卷预定的重量！\");\n                    return false;\n                }\n                if (element.width == null || element.width == 0) {\n                    this.alertErr(true, \"请输入子卷的宽度！\");\n                    return false;\n                }\n            }\n            if (this.percent < 95) {\n                this.alertErr(\"warning\", \"期望最小使用率有点低哦！\");\n            }\n            if (this.percent >= 100) {\n                this.alertErr(\"error\", \"期望最小使用率太高了哦！做不到\");\n                return false;\n            }\n            this.mode_data.parents.forEach((parent) => {\n                parent_width += parseFloat(parent.width) * parseFloat(parent.quantity);\n                all_weight += parseFloat(parent.weight) * parseFloat(parent.quantity);\n            });\n            for (let i = 0; i < this.mode_data.childs.length; i++) {\n                const child = this.mode_data.childs[i];\n                let s = (parseFloat(child.width) / parseFloat(parent_width)) * all_weight;\n                let n = Math.round(parseFloat(child.weight) / s);\n                child.quantity = n;\n            }\n            this.disableCutBtn(true);\n            const dataToSend = this.prepareDataToSend1DForWeight();\n            reqStockByWeight(dataToSend).then((response) => {\n                console.log(response);\n                this.disableCutBtn(false);\n                if (response.code == 0) {\n                    this.displayResult(response);\n                    return\n                }\n                this.alertErr(true, response.msg);\n            })\n                .catch((error) => {\n                    console.log(error);\n                    this.disableCutBtn(false);\n                    this.alertErr(true, \"连接服务失败，请检查网络\");\n                    return false;\n                });\n        },\n        sendCutRules: function () {\n            this.cutRules = true;\n            this.disableCutBtn(true);\n            let dataToSend = this.prepareDataToSend1DForRule();\n            console.log(dataToSend);\n            this.dialog = true;\n            reqStockByLen(dataToSend).then((response) => {\n                console.log(response);\n                this.disableCutBtn(false);\n                this.dialog = false;\n                if (response.code == 0) {\n                    response.data.solutions.forEach((sol) => {\n                        if (sol.sub_child_solver.length > 0) {\n                            sol.sub_child_solver.forEach((rule) => {\n                                rule.width = rule.width / 1000;\n                            })\n                        }\n                        // 计算浪费宽度\n                        let worstWidth = 0;\n                        sol.solutions.solutions.forEach((sud_sol) => {\n                            worstWidth += parseFloat(sud_sol.un_used);\n                        });\n                        sol.worstWidth = (worstWidth / 1000) + parseFloat(this.side);\n                    });\n                    this.mode_data.childs_for_select = response.data.solutions;\n                    return\n                }\n                this.alertErr(true, response.msg);\n            })\n                .catch((error) => {\n                    this.disableCutBtn(false);\n                    this.dialog = false;\n                    this.alertErr(true, error.message);\n                    return false;\n                });\n        },\n        displayResult: function (response) {\n            if (response.data && response.data.status_name) {\n                if (response.data.status_name == \"Error\") {\n                    this.alertErr(true, \"服务计算超出母卷的长度，请重试！\");\n                    return false;\n                }\n            }\n\n            this.mode_data.result = response;\n\n            if (this.mode_data.result && this.mode_data.result.status_name) {\n                this.mode_data.result.statusName =\n                    this.mode_data.result.status_name.toLowerCase();\n            }\n\n            if (this.cutRules == false) {\n                let rolls = [];\n                this.mode_data.result.data.solutions.forEach((soluton) => {\n                    let subs = [];\n                    soluton.subs.forEach((s) => {\n                        subs.push(Math.round(parseFloat(s)) / 1000);\n                    });\n\n                    let subs_weight = [];\n                    soluton.sub_weights.forEach((s) => {\n                        subs_weight.push(Math.round(parseFloat(s)) / 1000);\n                    });\n                    let all_len = Math.round(parseFloat(soluton.parent_length)) / 1000;\n                    let all_weight = Math.round(parseFloat(soluton.parent_weight)) / 1000;\n                    rolls.push([parseFloat(soluton.un_used / 1000), subs, parseFloat(soluton.un_used_weight / 1000), subs_weight, all_len, all_weight]);\n                });\n\n                this.mode_data.result.solutions = rolls;\n                let child_index = 0;\n                this.mode_data.result.data.sub_weights.forEach((weight) => {\n                    this.mode_data.childs[child_index].weight = parseFloat(weight / 1000);\n                    child_index += 1;\n                });\n            } else {\n                let rolls = [];\n                this.mode_data.result.data.solutions.forEach((soluton) => {\n                    let subs = [];\n                    soluton.solutions.solutions.forEach((item) => {\n                        item.subs.forEach((s) => {\n                            subs.push(Math.round(parseFloat(s)) / 1000);\n                        });\n                    });\n                    let subs_weight = [];\n\n                    soluton.solutions.solutions.forEach((item) => {\n                        item.sub_weights.forEach((s) => {\n                            subs_weight.push(Math.round(parseFloat(s)) / 1000);\n                        });\n                    });\n                    rolls.push([parseFloat(soluton.un_used / 1000), subs, parseFloat(soluton.un_used_weight / 1000), subs_weight]);\n                });\n\n                this.mode_data.result.solutions = rolls;\n            }\n            this.draw1d();\n        },\n        sortBigRolls: function (bigRolls) {\n            bigRolls = bigRolls.sort(function (a, b) {\n                return a[0] - b[0];\n            });\n            for (let i = 0; i < bigRolls.length; i++) {\n                // 计算子卷的个数和重量\n                let unique_arr = Array.from(new Set(bigRolls[i][1]));\n                let for_each_unique_arr = Array.from(new Set(bigRolls[i][1]));\n                for_each_unique_arr.forEach((j, index_j) => {\n                    let num = 0;\n                    let weight = 0;\n                    bigRolls[i][1].forEach((k, index_k) => {\n                        if (j == k) {\n                            num += 1;\n                            weight += bigRolls[i][3][index_k];\n                        }\n                    })\n                    unique_arr[index_j] = j + \"*\" + num + \"/\" + Math.round(parseFloat(weight) * 1000) / 1000;\n                })\n                bigRolls[i][3] = unique_arr;\n                // 排序\n                let smallRolls = bigRolls[i][1];\n                smallRolls = smallRolls.sort(function (a, b) {\n                    return a - b;\n                });\n                bigRolls[i][1] = smallRolls;\n            }\n            return bigRolls;\n        },\n        getColorDict: function () {\n            const bigRolls = this.mode_data.result.solutions;\n            let uniqueSmallRollsSet = new Set([]);\n            for (let i = 0; i < bigRolls.length; i++) {\n                const smallRolls = bigRolls[i][1];\n                smallRolls.forEach((roll) => {\n                    uniqueSmallRollsSet.add(roll);\n                });\n            }\n\n            let uniqueSmallRolls = Array.from(uniqueSmallRollsSet);\n            let colorDict = {};\n\n            for (let i = 0; i < uniqueSmallRolls.length; i++) {\n                colorDict[uniqueSmallRolls[i]] = this.colors[i % this.colors.length];\n            }\n            return colorDict;\n        },\n        draw1d: function () {\n            this.clearTheDrawing();\n            if (!this.mode_data.result) {\n                console.log(\n                    `Cannot draw anything. \"result\" is: ${this.mode_data.result} for mode: ${this.mode}`\n                );\n                return;\n            }\n            const unSortedBigRolls = this.mode_data.result.solutions;\n            const bigRolls = this.sortBigRolls(unSortedBigRolls);\n            this.mode_data.result.solutions = bigRolls;\n            const colorDict = this.getColorDict();\n            let parentWidth = this.mode_data.parents[0].width;\n            this.mode_data.parents.forEach((item) => {\n                if (item.width > parentWidth) {\n                    parentWidth = item.width;\n                }\n            });\n            // get the current width alloted to #d3_area, it's dynamic\n            const graphWidth = document.getElementById(\"d3_area\").clientWidth;\n            console.log(graphWidth);\n            let xScale = d3\n                .scaleLinear()\n                .domain([0, parentWidth])\n                .range([0, graphWidth]);\n            let yScale = d3\n                .scaleBand()\n                .domain(d3.range(bigRolls.length))\n                // .range([0, 20 * bigRolls.length])\n                .range([0, 100]);\n\n            // create svg element:\n            let svg = d3.select(\"#d3_area svg\");\n\n            let margin = { top: 5, right: 10, bottom: 5, left: 10 };\n\n            let svgWidth = graphWidth - margin.left - margin.right;\n            let svgHeight = 100 - margin.top - margin.bottom;\n\n            svg\n                .attr(\"width\", svgWidth + margin.left + margin.right)\n                .attr(\"height\", svgHeight + margin.top + margin.bottom)\n                .style(\"background-color\", \"#f3f4f7\")\n                .style(\"border\", \"1px solid #f3f4f7\")\n\n            let x1 = 0;\n            let x2 = 0;\n            let y1 = 0;\n            for (let i = 0; i < bigRolls.length; i++) {\n                const unusedWidth = bigRolls[i][0];\n                const smallRolls = bigRolls[i][1];\n\n                x1 = 0;\n                y1 = yScale(i);\n\n                for (let j = 0; j < smallRolls.length; j++) {\n                    const smallRoll = smallRolls[j];\n\n                    const width = xScale(smallRoll);\n                    x2 = x1 + width;\n\n                    // add the rectangular strip / bar\n                    let g = svg.append(\"g\").attr(\"transform\", `translate(${x1},${y1})`); // one vertical bar\n\n                    g.append(\"rect\")\n                        .attr(\"fill\", colorDict[smallRoll]) // <- apply color associated with this width\n                        .attr(\"width\", width - 1)\n                        .attr(\"height\", yScale.bandwidth() - 1);\n\n                    // add text\n                    g.append(\"text\")\n                        .attr(\"fill\", \"white\")\n                        .attr(\"x\", 3) // this x is relative to the parent g\n                        .attr(\"y\", yScale.bandwidth() / 2)\n                        .attr(\"dy\", \"0.35em\")\n                        .text(smallRoll);\n\n                    // for next rect, x1 will update to x2 of current rect\n                    x1 = x2;\n                }\n\n                if (unusedWidth > 0) {\n                    // add unusedWith as rectangular bar\n                    x2 = x1 + xScale(unusedWidth);\n                    let g = svg.append(\"g\").attr(\"transform\", `translate(${x1},${y1})`); // one vertical bar\n\n                    g.append(\"rect\")\n                        .attr(\"fill\", this.wasteColor)\n                        .attr(\"width\", xScale(unusedWidth) - 1)\n                        .attr(\"height\", yScale.bandwidth() - 1);\n\n                    // add text\n                    g.append(\"text\")\n                        .attr(\"fill\", \"white\")\n                        .attr(\"x\", 3)\n                        .attr(\"y\", yScale.bandwidth() / 2)\n                        .attr(\"dy\", \"0.35em\")\n                        .text(Math.round(unusedWidth));\n                }\n            }\n            return svg.node();\n        },\n        clearTheDrawing: function () {\n            d3.selectAll(\"#d3_area svg > *\").remove();\n            d3.select(\"#d3_area svg\").style(\"border\", \"\");\n        },\n        addRowToChilds: function () {\n            this.mode_data.childs.push([0, 0, 0]);\n        },\n        removeRowToChilds: function (index) {\n            this.mode_data.childs.splice(index, 1);\n        },\n        addRowToParents: function () {\n            this.mode_data.parents.push([0, 0, 0]);\n        },\n        removeRowToParents: function (index) {\n            this.mode_data.parents.splice(index, 1);\n        },\n        downloadCsv: function () {\n            if (!this.mode_data.result || !this.mode_data.result.solutions) {\n                console.log(\"downloadCsv: bigRolls are empty..\");\n                return;\n            }\n\n            // prepare data\n            let dataForCsv = [[\"序号\", \"长度\", \"重量\", \"使用率\", \"损耗宽度\", \"损耗重量\", \"明细（规格*数量/重量）\"]];\n            let numSmallRolls = 0;\n\n            const bigRolls = this.mode_data.result.solutions;\n            for (let i = 0; i < bigRolls.length; i++) {\n                const smallRolls = bigRolls[i][1];\n                numSmallRolls += smallRolls.length;\n                // ['Stock #', 'Usage', 'Width of Cuts']\n                const nextRow = [\n                    i + 1,\n                    bigRolls[i][4],\n                    bigRolls[i][5],\n                    this.getPercentageUtilization(bigRolls[i][0], bigRolls[i][1]) + \"%\",\n                    bigRolls[i][0],\n                    bigRolls[i][2],\n                    bigRolls[i][3].join(\",\")\n                ];\n                dataForCsv.push(nextRow);\n            }\n\n            // convert to CSV format\n            // source: https://stackoverflow.com/a/14966131/3578289\n            const csvContent =\n                \"data:text/csv;charset=utf-8,\" +\n                dataForCsv.map((e) => e.join(\",\")).join(\"\\n\");\n            // console.log('csvContent: ', csvContent);\n\n            // download the file\n            let encodedUri = encodeURI(csvContent);\n            // console.log('encodedUri: ', encodedUri);\n            let link = document.createElement(\"a\");\n            link.setAttribute(\"href\", encodedUri);\n\n            // unique and identifiable filename\n            const d = new Date();\n            const dateString = `${d.getFullYear()}-${d.getMonth() + 1\n                }-${d.getUTCDate()}-${d.getHours()}${d.getMinutes()}-${d.getSeconds()}`;\n\n            const filename = `cuts_${numSmallRolls}_${dateString}.csv`;\n            link.setAttribute(\"download\", filename);\n\n            document.body.appendChild(link); // Required for FF\n            link.click(); // This will download the data file named \"my_data.csv\".\n        },\n        getSelections: function () {\n            getSpecOne({}).then((response) => {\n                console.log(response);\n                if (response.code == 0) {\n                    this.selections = [];\n                    response.data.forEach((data) => this.selections.push(data))\n                    return false;\n                }\n                this.alertErr(true, response.msg);\n                return false;\n            })\n                .catch((error) => {\n                    this.alertErr(true, error.message);\n                    return false;\n                });\n        }\n    }\n}\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OptiOne.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OptiOne.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./OptiOne.vue?vue&type=template&id=ee66b114&\"\nimport script from \"./OptiOne.vue?vue&type=script&lang=js&\"\nexport * from \"./OptiOne.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}